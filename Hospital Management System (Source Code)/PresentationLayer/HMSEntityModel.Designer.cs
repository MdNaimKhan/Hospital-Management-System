//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HMSModel", "FK_tblPatientDiagnosis_tblBIlling", "tblBIlling", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PresentationLayer.tblBIlling), "tblPatientDiagnosis", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PresentationLayer.tblPatientDiagnosi), true)]
[assembly: EdmRelationshipAttribute("HMSModel", "FK_tblPhysician_tblDepartment", "tblDepartment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PresentationLayer.tblDepartment), "tblPhysician", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PresentationLayer.tblPhysician), true)]
[assembly: EdmRelationshipAttribute("HMSModel", "FK_tblPatientDiagnosis_tblPatientDtls", "tblPatientDtls", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PresentationLayer.tblPatientDtl), "tblPatientDiagnosis", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PresentationLayer.tblPatientDiagnosi), true)]
[assembly: EdmRelationshipAttribute("HMSModel", "FK_tblPatientDtls_tblPlan", "tblPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PresentationLayer.tblPlan), "tblPatientDtls", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PresentationLayer.tblPatientDtl), true)]
[assembly: EdmRelationshipAttribute("HMSModel", "FK_tblPatientDtls_tblState", "tblState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PresentationLayer.tblState), "tblPatientDtls", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PresentationLayer.tblPatientDtl), true)]
[assembly: EdmRelationshipAttribute("HMSModel", "FK_tblPhysician_tblPlan", "tblPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PresentationLayer.tblPlan), "tblPhysician", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PresentationLayer.tblPhysician), true)]
[assembly: EdmRelationshipAttribute("HMSModel", "FK_tblPhysician_tblState", "tblState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PresentationLayer.tblState), "tblPhysician", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PresentationLayer.tblPhysician), true)]

#endregion

namespace PresentationLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HMSEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HMSEntities object using the connection string found in the 'HMSEntities' section of the application configuration file.
        /// </summary>
        public HMSEntities() : base("name=HMSEntities", "HMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HMSEntities object.
        /// </summary>
        public HMSEntities(string connectionString) : base(connectionString, "HMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HMSEntities object.
        /// </summary>
        public HMSEntities(EntityConnection connection) : base(connection, "HMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblBIlling> tblBIllings
        {
            get
            {
                if ((_tblBIllings == null))
                {
                    _tblBIllings = base.CreateObjectSet<tblBIlling>("tblBIllings");
                }
                return _tblBIllings;
            }
        }
        private ObjectSet<tblBIlling> _tblBIllings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblDepartment> tblDepartments
        {
            get
            {
                if ((_tblDepartments == null))
                {
                    _tblDepartments = base.CreateObjectSet<tblDepartment>("tblDepartments");
                }
                return _tblDepartments;
            }
        }
        private ObjectSet<tblDepartment> _tblDepartments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblPatientDiagnosi> tblPatientDiagnosis
        {
            get
            {
                if ((_tblPatientDiagnosis == null))
                {
                    _tblPatientDiagnosis = base.CreateObjectSet<tblPatientDiagnosi>("tblPatientDiagnosis");
                }
                return _tblPatientDiagnosis;
            }
        }
        private ObjectSet<tblPatientDiagnosi> _tblPatientDiagnosis;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblPatientDtl> tblPatientDtls
        {
            get
            {
                if ((_tblPatientDtls == null))
                {
                    _tblPatientDtls = base.CreateObjectSet<tblPatientDtl>("tblPatientDtls");
                }
                return _tblPatientDtls;
            }
        }
        private ObjectSet<tblPatientDtl> _tblPatientDtls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblPhysician> tblPhysicians
        {
            get
            {
                if ((_tblPhysicians == null))
                {
                    _tblPhysicians = base.CreateObjectSet<tblPhysician>("tblPhysicians");
                }
                return _tblPhysicians;
            }
        }
        private ObjectSet<tblPhysician> _tblPhysicians;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblPlan> tblPlans
        {
            get
            {
                if ((_tblPlans == null))
                {
                    _tblPlans = base.CreateObjectSet<tblPlan>("tblPlans");
                }
                return _tblPlans;
            }
        }
        private ObjectSet<tblPlan> _tblPlans;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tblState> tblStates
        {
            get
            {
                if ((_tblStates == null))
                {
                    _tblStates = base.CreateObjectSet<tblState>("tblStates");
                }
                return _tblStates;
            }
        }
        private ObjectSet<tblState> _tblStates;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblBIllings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblBIllings(tblBIlling tblBIlling)
        {
            base.AddObject("tblBIllings", tblBIlling);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblDepartments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblDepartments(tblDepartment tblDepartment)
        {
            base.AddObject("tblDepartments", tblDepartment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblPatientDiagnosis EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblPatientDiagnosis(tblPatientDiagnosi tblPatientDiagnosi)
        {
            base.AddObject("tblPatientDiagnosis", tblPatientDiagnosi);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblPatientDtls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblPatientDtls(tblPatientDtl tblPatientDtl)
        {
            base.AddObject("tblPatientDtls", tblPatientDtl);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblPhysicians EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblPhysicians(tblPhysician tblPhysician)
        {
            base.AddObject("tblPhysicians", tblPhysician);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblPlans EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblPlans(tblPlan tblPlan)
        {
            base.AddObject("tblPlans", tblPlan);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tblStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotblStates(tblState tblState)
        {
            base.AddObject("tblStates", tblState);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="state">No Metadata Documentation available.</param>
        /// <param name="plan_id">No Metadata Documentation available.</param>
        /// <param name="department_id">No Metadata Documentation available.</param>
        public ObjectResult<SpPhysicianSearch_Result> SpPhysicianSearch(global::System.String state, global::System.String plan_id, global::System.String department_id)
        {
            ObjectParameter stateParameter;
            if (state != null)
            {
                stateParameter = new ObjectParameter("state", state);
            }
            else
            {
                stateParameter = new ObjectParameter("state", typeof(global::System.String));
            }
    
            ObjectParameter plan_idParameter;
            if (plan_id != null)
            {
                plan_idParameter = new ObjectParameter("plan_id", plan_id);
            }
            else
            {
                plan_idParameter = new ObjectParameter("plan_id", typeof(global::System.String));
            }
    
            ObjectParameter department_idParameter;
            if (department_id != null)
            {
                department_idParameter = new ObjectParameter("department_id", department_id);
            }
            else
            {
                department_idParameter = new ObjectParameter("department_id", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SpPhysicianSearch_Result>("SpPhysicianSearch", stateParameter, plan_idParameter, department_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="patient_id">No Metadata Documentation available.</param>
        public ObjectResult<SpViewPatient_Result> SpViewPatient(Nullable<global::System.Int64> patient_id)
        {
            ObjectParameter patient_idParameter;
            if (patient_id.HasValue)
            {
                patient_idParameter = new ObjectParameter("patient_id", patient_id);
            }
            else
            {
                patient_idParameter = new ObjectParameter("patient_id", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<SpViewPatient_Result>("SpViewPatient", patient_idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="first_name">No Metadata Documentation available.</param>
        /// <param name="last_name">No Metadata Documentation available.</param>
        public ObjectResult<SpViewPatientonFNameandLName_Result> SpViewPatientonFNameandLName(global::System.String first_name, global::System.String last_name)
        {
            ObjectParameter first_nameParameter;
            if (first_name != null)
            {
                first_nameParameter = new ObjectParameter("first_name", first_name);
            }
            else
            {
                first_nameParameter = new ObjectParameter("first_name", typeof(global::System.String));
            }
    
            ObjectParameter last_nameParameter;
            if (last_name != null)
            {
                last_nameParameter = new ObjectParameter("last_name", last_name);
            }
            else
            {
                last_nameParameter = new ObjectParameter("last_name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SpViewPatientonFNameandLName_Result>("SpViewPatientonFNameandLName", first_nameParameter, last_nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="bill_amount">No Metadata Documentation available.</param>
        /// <param name="mode_of_payment">No Metadata Documentation available.</param>
        /// <param name="card_number">No Metadata Documentation available.</param>
        /// <param name="billID">No Metadata Documentation available.</param>
        public int usp_InsertBillInfo(Nullable<global::System.Decimal> bill_amount, global::System.String mode_of_payment, global::System.String card_number, ObjectParameter billID)
        {
            ObjectParameter bill_amountParameter;
            if (bill_amount.HasValue)
            {
                bill_amountParameter = new ObjectParameter("bill_amount", bill_amount);
            }
            else
            {
                bill_amountParameter = new ObjectParameter("bill_amount", typeof(global::System.Decimal));
            }
    
            ObjectParameter mode_of_paymentParameter;
            if (mode_of_payment != null)
            {
                mode_of_paymentParameter = new ObjectParameter("mode_of_payment", mode_of_payment);
            }
            else
            {
                mode_of_paymentParameter = new ObjectParameter("mode_of_payment", typeof(global::System.String));
            }
    
            ObjectParameter card_numberParameter;
            if (card_number != null)
            {
                card_numberParameter = new ObjectParameter("card_number", card_number);
            }
            else
            {
                card_numberParameter = new ObjectParameter("card_number", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_InsertBillInfo", bill_amountParameter, mode_of_paymentParameter, card_numberParameter, billID);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="firstName">No Metadata Documentation available.</param>
        /// <param name="lastName">No Metadata Documentation available.</param>
        /// <param name="dOB">No Metadata Documentation available.</param>
        /// <param name="phoneNumber">No Metadata Documentation available.</param>
        /// <param name="emailID">No Metadata Documentation available.</param>
        /// <param name="stateID">No Metadata Documentation available.</param>
        /// <param name="insurancePlan">No Metadata Documentation available.</param>
        public int usp_InsertPatientDtls(global::System.String firstName, global::System.String lastName, Nullable<global::System.DateTime> dOB, Nullable<global::System.Decimal> phoneNumber, global::System.String emailID, global::System.String stateID, global::System.String insurancePlan)
        {
            ObjectParameter firstNameParameter;
            if (firstName != null)
            {
                firstNameParameter = new ObjectParameter("FirstName", firstName);
            }
            else
            {
                firstNameParameter = new ObjectParameter("FirstName", typeof(global::System.String));
            }
    
            ObjectParameter lastNameParameter;
            if (lastName != null)
            {
                lastNameParameter = new ObjectParameter("LastName", lastName);
            }
            else
            {
                lastNameParameter = new ObjectParameter("LastName", typeof(global::System.String));
            }
    
            ObjectParameter dOBParameter;
            if (dOB.HasValue)
            {
                dOBParameter = new ObjectParameter("DOB", dOB);
            }
            else
            {
                dOBParameter = new ObjectParameter("DOB", typeof(global::System.DateTime));
            }
    
            ObjectParameter phoneNumberParameter;
            if (phoneNumber.HasValue)
            {
                phoneNumberParameter = new ObjectParameter("PhoneNumber", phoneNumber);
            }
            else
            {
                phoneNumberParameter = new ObjectParameter("PhoneNumber", typeof(global::System.Decimal));
            }
    
            ObjectParameter emailIDParameter;
            if (emailID != null)
            {
                emailIDParameter = new ObjectParameter("EmailID", emailID);
            }
            else
            {
                emailIDParameter = new ObjectParameter("EmailID", typeof(global::System.String));
            }
    
            ObjectParameter stateIDParameter;
            if (stateID != null)
            {
                stateIDParameter = new ObjectParameter("StateID", stateID);
            }
            else
            {
                stateIDParameter = new ObjectParameter("StateID", typeof(global::System.String));
            }
    
            ObjectParameter insurancePlanParameter;
            if (insurancePlan != null)
            {
                insurancePlanParameter = new ObjectParameter("InsurancePlan", insurancePlan);
            }
            else
            {
                insurancePlanParameter = new ObjectParameter("InsurancePlan", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_InsertPatientDtls", firstNameParameter, lastNameParameter, dOBParameter, phoneNumberParameter, emailIDParameter, stateIDParameter, insurancePlanParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="table_name">No Metadata Documentation available.</param>
        public int usp_Get_Primary_ID(global::System.String table_name)
        {
            ObjectParameter table_nameParameter;
            if (table_name != null)
            {
                table_nameParameter = new ObjectParameter("table_name", table_name);
            }
            else
            {
                table_nameParameter = new ObjectParameter("table_name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_Get_Primary_ID", table_nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="table_name">No Metadata Documentation available.</param>
        /// <param name="id">No Metadata Documentation available.</param>
        public int usp_Get_ID_Value(global::System.String table_name, ObjectParameter id)
        {
            ObjectParameter table_nameParameter;
            if (table_name != null)
            {
                table_nameParameter = new ObjectParameter("table_name", table_name);
            }
            else
            {
                table_nameParameter = new ObjectParameter("table_name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("usp_Get_ID_Value", table_nameParameter, id);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.Int32>> sp_aggregate_patient_count()
        {
            return base.ExecuteFunction<Nullable<global::System.Int32>>("sp_aggregate_patient_count");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.Int32>> sp_aggregate_physician_count()
        {
            return base.ExecuteFunction<Nullable<global::System.Int32>>("sp_aggregate_physician_count");
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HMSModel", Name="tblBIlling")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblBIlling : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblBIlling object.
        /// </summary>
        /// <param name="bill_id">Initial value of the bill_id property.</param>
        /// <param name="bill_amount">Initial value of the bill_amount property.</param>
        /// <param name="mode_of_payment">Initial value of the mode_of_payment property.</param>
        public static tblBIlling CreatetblBIlling(global::System.Int64 bill_id, global::System.Decimal bill_amount, global::System.String mode_of_payment)
        {
            tblBIlling tblBIlling = new tblBIlling();
            tblBIlling.bill_id = bill_id;
            tblBIlling.bill_amount = bill_amount;
            tblBIlling.mode_of_payment = mode_of_payment;
            return tblBIlling;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 bill_id
        {
            get
            {
                return _bill_id;
            }
            set
            {
                if (_bill_id != value)
                {
                    Onbill_idChanging(value);
                    ReportPropertyChanging("bill_id");
                    _bill_id = StructuralObject.SetValidValue(value, "bill_id");
                    ReportPropertyChanged("bill_id");
                    Onbill_idChanged();
                }
            }
        }
        private global::System.Int64 _bill_id;
        partial void Onbill_idChanging(global::System.Int64 value);
        partial void Onbill_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal bill_amount
        {
            get
            {
                return _bill_amount;
            }
            set
            {
                Onbill_amountChanging(value);
                ReportPropertyChanging("bill_amount");
                _bill_amount = StructuralObject.SetValidValue(value, "bill_amount");
                ReportPropertyChanged("bill_amount");
                Onbill_amountChanged();
            }
        }
        private global::System.Decimal _bill_amount;
        partial void Onbill_amountChanging(global::System.Decimal value);
        partial void Onbill_amountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mode_of_payment
        {
            get
            {
                return _mode_of_payment;
            }
            set
            {
                Onmode_of_paymentChanging(value);
                ReportPropertyChanging("mode_of_payment");
                _mode_of_payment = StructuralObject.SetValidValue(value, false, "mode_of_payment");
                ReportPropertyChanged("mode_of_payment");
                Onmode_of_paymentChanged();
            }
        }
        private global::System.String _mode_of_payment;
        partial void Onmode_of_paymentChanging(global::System.String value);
        partial void Onmode_of_paymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String card_number
        {
            get
            {
                return _card_number;
            }
            set
            {
                Oncard_numberChanging(value);
                ReportPropertyChanging("card_number");
                _card_number = StructuralObject.SetValidValue(value, true, "card_number");
                ReportPropertyChanged("card_number");
                Oncard_numberChanged();
            }
        }
        private global::System.String _card_number;
        partial void Oncard_numberChanging(global::System.String value);
        partial void Oncard_numberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HMSModel", "FK_tblPatientDiagnosis_tblBIlling", "tblPatientDiagnosis")]
        public EntityCollection<tblPatientDiagnosi> tblPatientDiagnosis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tblPatientDiagnosi>("HMSModel.FK_tblPatientDiagnosis_tblBIlling", "tblPatientDiagnosis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tblPatientDiagnosi>("HMSModel.FK_tblPatientDiagnosis_tblBIlling", "tblPatientDiagnosis", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HMSModel", Name="tblDepartment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblDepartment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblDepartment object.
        /// </summary>
        /// <param name="department_id">Initial value of the department_id property.</param>
        /// <param name="department_name">Initial value of the department_name property.</param>
        public static tblDepartment CreatetblDepartment(global::System.String department_id, global::System.String department_name)
        {
            tblDepartment tblDepartment = new tblDepartment();
            tblDepartment.department_id = department_id;
            tblDepartment.department_name = department_name;
            return tblDepartment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String department_id
        {
            get
            {
                return _department_id;
            }
            set
            {
                if (_department_id != value)
                {
                    Ondepartment_idChanging(value);
                    ReportPropertyChanging("department_id");
                    _department_id = StructuralObject.SetValidValue(value, false, "department_id");
                    ReportPropertyChanged("department_id");
                    Ondepartment_idChanged();
                }
            }
        }
        private global::System.String _department_id;
        partial void Ondepartment_idChanging(global::System.String value);
        partial void Ondepartment_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String department_name
        {
            get
            {
                return _department_name;
            }
            set
            {
                Ondepartment_nameChanging(value);
                ReportPropertyChanging("department_name");
                _department_name = StructuralObject.SetValidValue(value, false, "department_name");
                ReportPropertyChanged("department_name");
                Ondepartment_nameChanged();
            }
        }
        private global::System.String _department_name;
        partial void Ondepartment_nameChanging(global::System.String value);
        partial void Ondepartment_nameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HMSModel", "FK_tblPhysician_tblDepartment", "tblPhysician")]
        public EntityCollection<tblPhysician> tblPhysicians
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tblPhysician>("HMSModel.FK_tblPhysician_tblDepartment", "tblPhysician");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tblPhysician>("HMSModel.FK_tblPhysician_tblDepartment", "tblPhysician", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HMSModel", Name="tblPatientDiagnosi")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblPatientDiagnosi : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblPatientDiagnosi object.
        /// </summary>
        /// <param name="diagnosis_id">Initial value of the diagnosis_id property.</param>
        /// <param name="symptoms">Initial value of the symptoms property.</param>
        /// <param name="diagnosis_provided">Initial value of the diagnosis_provided property.</param>
        /// <param name="administered_by">Initial value of the administered_by property.</param>
        /// <param name="date_of_diagnosis">Initial value of the date_of_diagnosis property.</param>
        /// <param name="follow_up_required">Initial value of the follow_up_required property.</param>
        /// <param name="bill">Initial value of the bill property.</param>
        /// <param name="patient_id">Initial value of the patient_id property.</param>
        public static tblPatientDiagnosi CreatetblPatientDiagnosi(global::System.Int64 diagnosis_id, global::System.String symptoms, global::System.String diagnosis_provided, global::System.String administered_by, global::System.DateTime date_of_diagnosis, global::System.String follow_up_required, global::System.Int64 bill, global::System.Int64 patient_id)
        {
            tblPatientDiagnosi tblPatientDiagnosi = new tblPatientDiagnosi();
            tblPatientDiagnosi.diagnosis_id = diagnosis_id;
            tblPatientDiagnosi.symptoms = symptoms;
            tblPatientDiagnosi.diagnosis_provided = diagnosis_provided;
            tblPatientDiagnosi.administered_by = administered_by;
            tblPatientDiagnosi.date_of_diagnosis = date_of_diagnosis;
            tblPatientDiagnosi.follow_up_required = follow_up_required;
            tblPatientDiagnosi.bill = bill;
            tblPatientDiagnosi.patient_id = patient_id;
            return tblPatientDiagnosi;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 diagnosis_id
        {
            get
            {
                return _diagnosis_id;
            }
            set
            {
                if (_diagnosis_id != value)
                {
                    Ondiagnosis_idChanging(value);
                    ReportPropertyChanging("diagnosis_id");
                    _diagnosis_id = StructuralObject.SetValidValue(value, "diagnosis_id");
                    ReportPropertyChanged("diagnosis_id");
                    Ondiagnosis_idChanged();
                }
            }
        }
        private global::System.Int64 _diagnosis_id;
        partial void Ondiagnosis_idChanging(global::System.Int64 value);
        partial void Ondiagnosis_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String symptoms
        {
            get
            {
                return _symptoms;
            }
            set
            {
                OnsymptomsChanging(value);
                ReportPropertyChanging("symptoms");
                _symptoms = StructuralObject.SetValidValue(value, false, "symptoms");
                ReportPropertyChanged("symptoms");
                OnsymptomsChanged();
            }
        }
        private global::System.String _symptoms;
        partial void OnsymptomsChanging(global::System.String value);
        partial void OnsymptomsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String diagnosis_provided
        {
            get
            {
                return _diagnosis_provided;
            }
            set
            {
                Ondiagnosis_providedChanging(value);
                ReportPropertyChanging("diagnosis_provided");
                _diagnosis_provided = StructuralObject.SetValidValue(value, false, "diagnosis_provided");
                ReportPropertyChanged("diagnosis_provided");
                Ondiagnosis_providedChanged();
            }
        }
        private global::System.String _diagnosis_provided;
        partial void Ondiagnosis_providedChanging(global::System.String value);
        partial void Ondiagnosis_providedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String administered_by
        {
            get
            {
                return _administered_by;
            }
            set
            {
                Onadministered_byChanging(value);
                ReportPropertyChanging("administered_by");
                _administered_by = StructuralObject.SetValidValue(value, false, "administered_by");
                ReportPropertyChanged("administered_by");
                Onadministered_byChanged();
            }
        }
        private global::System.String _administered_by;
        partial void Onadministered_byChanging(global::System.String value);
        partial void Onadministered_byChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_of_diagnosis
        {
            get
            {
                return _date_of_diagnosis;
            }
            set
            {
                Ondate_of_diagnosisChanging(value);
                ReportPropertyChanging("date_of_diagnosis");
                _date_of_diagnosis = StructuralObject.SetValidValue(value, "date_of_diagnosis");
                ReportPropertyChanged("date_of_diagnosis");
                Ondate_of_diagnosisChanged();
            }
        }
        private global::System.DateTime _date_of_diagnosis;
        partial void Ondate_of_diagnosisChanging(global::System.DateTime value);
        partial void Ondate_of_diagnosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String follow_up_required
        {
            get
            {
                return _follow_up_required;
            }
            set
            {
                Onfollow_up_requiredChanging(value);
                ReportPropertyChanging("follow_up_required");
                _follow_up_required = StructuralObject.SetValidValue(value, false, "follow_up_required");
                ReportPropertyChanged("follow_up_required");
                Onfollow_up_requiredChanged();
            }
        }
        private global::System.String _follow_up_required;
        partial void Onfollow_up_requiredChanging(global::System.String value);
        partial void Onfollow_up_requiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_of_followup
        {
            get
            {
                return _date_of_followup;
            }
            set
            {
                Ondate_of_followupChanging(value);
                ReportPropertyChanging("date_of_followup");
                _date_of_followup = StructuralObject.SetValidValue(value, "date_of_followup");
                ReportPropertyChanged("date_of_followup");
                Ondate_of_followupChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_of_followup;
        partial void Ondate_of_followupChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_of_followupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 bill
        {
            get
            {
                return _bill;
            }
            set
            {
                OnbillChanging(value);
                ReportPropertyChanging("bill");
                _bill = StructuralObject.SetValidValue(value, "bill");
                ReportPropertyChanged("bill");
                OnbillChanged();
            }
        }
        private global::System.Int64 _bill;
        partial void OnbillChanging(global::System.Int64 value);
        partial void OnbillChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 patient_id
        {
            get
            {
                return _patient_id;
            }
            set
            {
                Onpatient_idChanging(value);
                ReportPropertyChanging("patient_id");
                _patient_id = StructuralObject.SetValidValue(value, "patient_id");
                ReportPropertyChanged("patient_id");
                Onpatient_idChanged();
            }
        }
        private global::System.Int64 _patient_id;
        partial void Onpatient_idChanging(global::System.Int64 value);
        partial void Onpatient_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HMSModel", "FK_tblPatientDiagnosis_tblBIlling", "tblBIlling")]
        public tblBIlling tblBIlling
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblBIlling>("HMSModel.FK_tblPatientDiagnosis_tblBIlling", "tblBIlling").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblBIlling>("HMSModel.FK_tblPatientDiagnosis_tblBIlling", "tblBIlling").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tblBIlling> tblBIllingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblBIlling>("HMSModel.FK_tblPatientDiagnosis_tblBIlling", "tblBIlling");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tblBIlling>("HMSModel.FK_tblPatientDiagnosis_tblBIlling", "tblBIlling", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HMSModel", "FK_tblPatientDiagnosis_tblPatientDtls", "tblPatientDtls")]
        public tblPatientDtl tblPatientDtl
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblPatientDtl>("HMSModel.FK_tblPatientDiagnosis_tblPatientDtls", "tblPatientDtls").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblPatientDtl>("HMSModel.FK_tblPatientDiagnosis_tblPatientDtls", "tblPatientDtls").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tblPatientDtl> tblPatientDtlReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblPatientDtl>("HMSModel.FK_tblPatientDiagnosis_tblPatientDtls", "tblPatientDtls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tblPatientDtl>("HMSModel.FK_tblPatientDiagnosis_tblPatientDtls", "tblPatientDtls", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HMSModel", Name="tblPatientDtl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblPatientDtl : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblPatientDtl object.
        /// </summary>
        /// <param name="patient_id">Initial value of the patient_id property.</param>
        /// <param name="first_name">Initial value of the first_name property.</param>
        /// <param name="last_name">Initial value of the last_name property.</param>
        /// <param name="date_of_birth">Initial value of the date_of_birth property.</param>
        /// <param name="phone_number">Initial value of the phone_number property.</param>
        /// <param name="email_id">Initial value of the email_id property.</param>
        /// <param name="state">Initial value of the state property.</param>
        /// <param name="insurance_plan">Initial value of the insurance_plan property.</param>
        public static tblPatientDtl CreatetblPatientDtl(global::System.Int64 patient_id, global::System.String first_name, global::System.String last_name, global::System.DateTime date_of_birth, global::System.Decimal phone_number, global::System.String email_id, global::System.String state, global::System.String insurance_plan)
        {
            tblPatientDtl tblPatientDtl = new tblPatientDtl();
            tblPatientDtl.patient_id = patient_id;
            tblPatientDtl.first_name = first_name;
            tblPatientDtl.last_name = last_name;
            tblPatientDtl.date_of_birth = date_of_birth;
            tblPatientDtl.phone_number = phone_number;
            tblPatientDtl.email_id = email_id;
            tblPatientDtl.state = state;
            tblPatientDtl.insurance_plan = insurance_plan;
            return tblPatientDtl;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 patient_id
        {
            get
            {
                return _patient_id;
            }
            set
            {
                if (_patient_id != value)
                {
                    Onpatient_idChanging(value);
                    ReportPropertyChanging("patient_id");
                    _patient_id = StructuralObject.SetValidValue(value, "patient_id");
                    ReportPropertyChanged("patient_id");
                    Onpatient_idChanged();
                }
            }
        }
        private global::System.Int64 _patient_id;
        partial void Onpatient_idChanging(global::System.Int64 value);
        partial void Onpatient_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_of_birth
        {
            get
            {
                return _date_of_birth;
            }
            set
            {
                Ondate_of_birthChanging(value);
                ReportPropertyChanging("date_of_birth");
                _date_of_birth = StructuralObject.SetValidValue(value, "date_of_birth");
                ReportPropertyChanged("date_of_birth");
                Ondate_of_birthChanged();
            }
        }
        private global::System.DateTime _date_of_birth;
        partial void Ondate_of_birthChanging(global::System.DateTime value);
        partial void Ondate_of_birthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal phone_number
        {
            get
            {
                return _phone_number;
            }
            set
            {
                Onphone_numberChanging(value);
                ReportPropertyChanging("phone_number");
                _phone_number = StructuralObject.SetValidValue(value, "phone_number");
                ReportPropertyChanged("phone_number");
                Onphone_numberChanged();
            }
        }
        private global::System.Decimal _phone_number;
        partial void Onphone_numberChanging(global::System.Decimal value);
        partial void Onphone_numberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email_id
        {
            get
            {
                return _email_id;
            }
            set
            {
                Onemail_idChanging(value);
                ReportPropertyChanging("email_id");
                _email_id = StructuralObject.SetValidValue(value, false, "email_id");
                ReportPropertyChanged("email_id");
                Onemail_idChanged();
            }
        }
        private global::System.String _email_id;
        partial void Onemail_idChanging(global::System.String value);
        partial void Onemail_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String state
        {
            get
            {
                return _state;
            }
            set
            {
                OnstateChanging(value);
                ReportPropertyChanging("state");
                _state = StructuralObject.SetValidValue(value, false, "state");
                ReportPropertyChanged("state");
                OnstateChanged();
            }
        }
        private global::System.String _state;
        partial void OnstateChanging(global::System.String value);
        partial void OnstateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String insurance_plan
        {
            get
            {
                return _insurance_plan;
            }
            set
            {
                Oninsurance_planChanging(value);
                ReportPropertyChanging("insurance_plan");
                _insurance_plan = StructuralObject.SetValidValue(value, false, "insurance_plan");
                ReportPropertyChanged("insurance_plan");
                Oninsurance_planChanged();
            }
        }
        private global::System.String _insurance_plan;
        partial void Oninsurance_planChanging(global::System.String value);
        partial void Oninsurance_planChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HMSModel", "FK_tblPatientDiagnosis_tblPatientDtls", "tblPatientDiagnosis")]
        public EntityCollection<tblPatientDiagnosi> tblPatientDiagnosis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tblPatientDiagnosi>("HMSModel.FK_tblPatientDiagnosis_tblPatientDtls", "tblPatientDiagnosis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tblPatientDiagnosi>("HMSModel.FK_tblPatientDiagnosis_tblPatientDtls", "tblPatientDiagnosis", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HMSModel", "FK_tblPatientDtls_tblPlan", "tblPlan")]
        public tblPlan tblPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblPlan>("HMSModel.FK_tblPatientDtls_tblPlan", "tblPlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblPlan>("HMSModel.FK_tblPatientDtls_tblPlan", "tblPlan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tblPlan> tblPlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblPlan>("HMSModel.FK_tblPatientDtls_tblPlan", "tblPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tblPlan>("HMSModel.FK_tblPatientDtls_tblPlan", "tblPlan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HMSModel", "FK_tblPatientDtls_tblState", "tblState")]
        public tblState tblState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblState>("HMSModel.FK_tblPatientDtls_tblState", "tblState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblState>("HMSModel.FK_tblPatientDtls_tblState", "tblState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tblState> tblStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblState>("HMSModel.FK_tblPatientDtls_tblState", "tblState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tblState>("HMSModel.FK_tblPatientDtls_tblState", "tblState", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HMSModel", Name="tblPhysician")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblPhysician : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblPhysician object.
        /// </summary>
        /// <param name="physician_id">Initial value of the physician_id property.</param>
        /// <param name="first_name">Initial value of the first_name property.</param>
        /// <param name="last_name">Initial value of the last_name property.</param>
        /// <param name="department_id">Initial value of the department_id property.</param>
        /// <param name="educational_qualification">Initial value of the educational_qualification property.</param>
        /// <param name="years_of_experience">Initial value of the years_of_experience property.</param>
        /// <param name="state">Initial value of the state property.</param>
        /// <param name="plan_id">Initial value of the plan_id property.</param>
        public static tblPhysician CreatetblPhysician(global::System.Int64 physician_id, global::System.String first_name, global::System.String last_name, global::System.String department_id, global::System.String educational_qualification, global::System.Int32 years_of_experience, global::System.String state, global::System.String plan_id)
        {
            tblPhysician tblPhysician = new tblPhysician();
            tblPhysician.physician_id = physician_id;
            tblPhysician.first_name = first_name;
            tblPhysician.last_name = last_name;
            tblPhysician.department_id = department_id;
            tblPhysician.educational_qualification = educational_qualification;
            tblPhysician.years_of_experience = years_of_experience;
            tblPhysician.state = state;
            tblPhysician.plan_id = plan_id;
            return tblPhysician;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 physician_id
        {
            get
            {
                return _physician_id;
            }
            set
            {
                if (_physician_id != value)
                {
                    Onphysician_idChanging(value);
                    ReportPropertyChanging("physician_id");
                    _physician_id = StructuralObject.SetValidValue(value, "physician_id");
                    ReportPropertyChanged("physician_id");
                    Onphysician_idChanged();
                }
            }
        }
        private global::System.Int64 _physician_id;
        partial void Onphysician_idChanging(global::System.Int64 value);
        partial void Onphysician_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String department_id
        {
            get
            {
                return _department_id;
            }
            set
            {
                Ondepartment_idChanging(value);
                ReportPropertyChanging("department_id");
                _department_id = StructuralObject.SetValidValue(value, false, "department_id");
                ReportPropertyChanged("department_id");
                Ondepartment_idChanged();
            }
        }
        private global::System.String _department_id;
        partial void Ondepartment_idChanging(global::System.String value);
        partial void Ondepartment_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String educational_qualification
        {
            get
            {
                return _educational_qualification;
            }
            set
            {
                Oneducational_qualificationChanging(value);
                ReportPropertyChanging("educational_qualification");
                _educational_qualification = StructuralObject.SetValidValue(value, false, "educational_qualification");
                ReportPropertyChanged("educational_qualification");
                Oneducational_qualificationChanged();
            }
        }
        private global::System.String _educational_qualification;
        partial void Oneducational_qualificationChanging(global::System.String value);
        partial void Oneducational_qualificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 years_of_experience
        {
            get
            {
                return _years_of_experience;
            }
            set
            {
                Onyears_of_experienceChanging(value);
                ReportPropertyChanging("years_of_experience");
                _years_of_experience = StructuralObject.SetValidValue(value, "years_of_experience");
                ReportPropertyChanged("years_of_experience");
                Onyears_of_experienceChanged();
            }
        }
        private global::System.Int32 _years_of_experience;
        partial void Onyears_of_experienceChanging(global::System.Int32 value);
        partial void Onyears_of_experienceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String state
        {
            get
            {
                return _state;
            }
            set
            {
                OnstateChanging(value);
                ReportPropertyChanging("state");
                _state = StructuralObject.SetValidValue(value, false, "state");
                ReportPropertyChanged("state");
                OnstateChanged();
            }
        }
        private global::System.String _state;
        partial void OnstateChanging(global::System.String value);
        partial void OnstateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String plan_id
        {
            get
            {
                return _plan_id;
            }
            set
            {
                Onplan_idChanging(value);
                ReportPropertyChanging("plan_id");
                _plan_id = StructuralObject.SetValidValue(value, false, "plan_id");
                ReportPropertyChanged("plan_id");
                Onplan_idChanged();
            }
        }
        private global::System.String _plan_id;
        partial void Onplan_idChanging(global::System.String value);
        partial void Onplan_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HMSModel", "FK_tblPhysician_tblDepartment", "tblDepartment")]
        public tblDepartment tblDepartment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblDepartment>("HMSModel.FK_tblPhysician_tblDepartment", "tblDepartment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblDepartment>("HMSModel.FK_tblPhysician_tblDepartment", "tblDepartment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tblDepartment> tblDepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblDepartment>("HMSModel.FK_tblPhysician_tblDepartment", "tblDepartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tblDepartment>("HMSModel.FK_tblPhysician_tblDepartment", "tblDepartment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HMSModel", "FK_tblPhysician_tblPlan", "tblPlan")]
        public tblPlan tblPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblPlan>("HMSModel.FK_tblPhysician_tblPlan", "tblPlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblPlan>("HMSModel.FK_tblPhysician_tblPlan", "tblPlan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tblPlan> tblPlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblPlan>("HMSModel.FK_tblPhysician_tblPlan", "tblPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tblPlan>("HMSModel.FK_tblPhysician_tblPlan", "tblPlan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HMSModel", "FK_tblPhysician_tblState", "tblState")]
        public tblState tblState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblState>("HMSModel.FK_tblPhysician_tblState", "tblState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblState>("HMSModel.FK_tblPhysician_tblState", "tblState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tblState> tblStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tblState>("HMSModel.FK_tblPhysician_tblState", "tblState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tblState>("HMSModel.FK_tblPhysician_tblState", "tblState", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HMSModel", Name="tblPlan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblPlan : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblPlan object.
        /// </summary>
        /// <param name="plan_id">Initial value of the plan_id property.</param>
        /// <param name="plan_name">Initial value of the plan_name property.</param>
        public static tblPlan CreatetblPlan(global::System.String plan_id, global::System.String plan_name)
        {
            tblPlan tblPlan = new tblPlan();
            tblPlan.plan_id = plan_id;
            tblPlan.plan_name = plan_name;
            return tblPlan;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String plan_id
        {
            get
            {
                return _plan_id;
            }
            set
            {
                if (_plan_id != value)
                {
                    Onplan_idChanging(value);
                    ReportPropertyChanging("plan_id");
                    _plan_id = StructuralObject.SetValidValue(value, false, "plan_id");
                    ReportPropertyChanged("plan_id");
                    Onplan_idChanged();
                }
            }
        }
        private global::System.String _plan_id;
        partial void Onplan_idChanging(global::System.String value);
        partial void Onplan_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String plan_name
        {
            get
            {
                return _plan_name;
            }
            set
            {
                Onplan_nameChanging(value);
                ReportPropertyChanging("plan_name");
                _plan_name = StructuralObject.SetValidValue(value, false, "plan_name");
                ReportPropertyChanged("plan_name");
                Onplan_nameChanged();
            }
        }
        private global::System.String _plan_name;
        partial void Onplan_nameChanging(global::System.String value);
        partial void Onplan_nameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HMSModel", "FK_tblPatientDtls_tblPlan", "tblPatientDtls")]
        public EntityCollection<tblPatientDtl> tblPatientDtls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tblPatientDtl>("HMSModel.FK_tblPatientDtls_tblPlan", "tblPatientDtls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tblPatientDtl>("HMSModel.FK_tblPatientDtls_tblPlan", "tblPatientDtls", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HMSModel", "FK_tblPhysician_tblPlan", "tblPhysician")]
        public EntityCollection<tblPhysician> tblPhysicians
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tblPhysician>("HMSModel.FK_tblPhysician_tblPlan", "tblPhysician");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tblPhysician>("HMSModel.FK_tblPhysician_tblPlan", "tblPhysician", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HMSModel", Name="tblState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tblState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tblState object.
        /// </summary>
        /// <param name="state_id">Initial value of the state_id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static tblState CreatetblState(global::System.String state_id, global::System.String name)
        {
            tblState tblState = new tblState();
            tblState.state_id = state_id;
            tblState.name = name;
            return tblState;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String state_id
        {
            get
            {
                return _state_id;
            }
            set
            {
                if (_state_id != value)
                {
                    Onstate_idChanging(value);
                    ReportPropertyChanging("state_id");
                    _state_id = StructuralObject.SetValidValue(value, false, "state_id");
                    ReportPropertyChanged("state_id");
                    Onstate_idChanged();
                }
            }
        }
        private global::System.String _state_id;
        partial void Onstate_idChanging(global::System.String value);
        partial void Onstate_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HMSModel", "FK_tblPatientDtls_tblState", "tblPatientDtls")]
        public EntityCollection<tblPatientDtl> tblPatientDtls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tblPatientDtl>("HMSModel.FK_tblPatientDtls_tblState", "tblPatientDtls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tblPatientDtl>("HMSModel.FK_tblPatientDtls_tblState", "tblPatientDtls", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HMSModel", "FK_tblPhysician_tblState", "tblPhysician")]
        public EntityCollection<tblPhysician> tblPhysicians
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<tblPhysician>("HMSModel.FK_tblPhysician_tblState", "tblPhysician");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<tblPhysician>("HMSModel.FK_tblPhysician_tblState", "tblPhysician", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="HMSModel", Name="SpPhysicianSearch_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SpPhysicianSearch_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpPhysicianSearch_Result object.
        /// </summary>
        /// <param name="physician_id">Initial value of the physician_id property.</param>
        /// <param name="first_name">Initial value of the first_name property.</param>
        /// <param name="last_name">Initial value of the last_name property.</param>
        /// <param name="department_id">Initial value of the department_id property.</param>
        /// <param name="educational_qualification">Initial value of the educational_qualification property.</param>
        /// <param name="years_of_experience">Initial value of the years_of_experience property.</param>
        /// <param name="department_name">Initial value of the department_name property.</param>
        /// <param name="plan_id">Initial value of the plan_id property.</param>
        /// <param name="state">Initial value of the state property.</param>
        public static SpPhysicianSearch_Result CreateSpPhysicianSearch_Result(global::System.Int64 physician_id, global::System.String first_name, global::System.String last_name, global::System.String department_id, global::System.String educational_qualification, global::System.Int32 years_of_experience, global::System.String department_name, global::System.String plan_id, global::System.String state)
        {
            SpPhysicianSearch_Result spPhysicianSearch_Result = new SpPhysicianSearch_Result();
            spPhysicianSearch_Result.physician_id = physician_id;
            spPhysicianSearch_Result.first_name = first_name;
            spPhysicianSearch_Result.last_name = last_name;
            spPhysicianSearch_Result.department_id = department_id;
            spPhysicianSearch_Result.educational_qualification = educational_qualification;
            spPhysicianSearch_Result.years_of_experience = years_of_experience;
            spPhysicianSearch_Result.department_name = department_name;
            spPhysicianSearch_Result.plan_id = plan_id;
            spPhysicianSearch_Result.state = state;
            return spPhysicianSearch_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 physician_id
        {
            get
            {
                return _physician_id;
            }
            set
            {
                Onphysician_idChanging(value);
                ReportPropertyChanging("physician_id");
                _physician_id = StructuralObject.SetValidValue(value, "physician_id");
                ReportPropertyChanged("physician_id");
                Onphysician_idChanged();
            }
        }
        private global::System.Int64 _physician_id;
        partial void Onphysician_idChanging(global::System.Int64 value);
        partial void Onphysician_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String department_id
        {
            get
            {
                return _department_id;
            }
            set
            {
                Ondepartment_idChanging(value);
                ReportPropertyChanging("department_id");
                _department_id = StructuralObject.SetValidValue(value, false, "department_id");
                ReportPropertyChanged("department_id");
                Ondepartment_idChanged();
            }
        }
        private global::System.String _department_id;
        partial void Ondepartment_idChanging(global::System.String value);
        partial void Ondepartment_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String educational_qualification
        {
            get
            {
                return _educational_qualification;
            }
            set
            {
                Oneducational_qualificationChanging(value);
                ReportPropertyChanging("educational_qualification");
                _educational_qualification = StructuralObject.SetValidValue(value, false, "educational_qualification");
                ReportPropertyChanged("educational_qualification");
                Oneducational_qualificationChanged();
            }
        }
        private global::System.String _educational_qualification;
        partial void Oneducational_qualificationChanging(global::System.String value);
        partial void Oneducational_qualificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 years_of_experience
        {
            get
            {
                return _years_of_experience;
            }
            set
            {
                Onyears_of_experienceChanging(value);
                ReportPropertyChanging("years_of_experience");
                _years_of_experience = StructuralObject.SetValidValue(value, "years_of_experience");
                ReportPropertyChanged("years_of_experience");
                Onyears_of_experienceChanged();
            }
        }
        private global::System.Int32 _years_of_experience;
        partial void Onyears_of_experienceChanging(global::System.Int32 value);
        partial void Onyears_of_experienceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String department_name
        {
            get
            {
                return _department_name;
            }
            set
            {
                Ondepartment_nameChanging(value);
                ReportPropertyChanging("department_name");
                _department_name = StructuralObject.SetValidValue(value, false, "department_name");
                ReportPropertyChanged("department_name");
                Ondepartment_nameChanged();
            }
        }
        private global::System.String _department_name;
        partial void Ondepartment_nameChanging(global::System.String value);
        partial void Ondepartment_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String plan_id
        {
            get
            {
                return _plan_id;
            }
            set
            {
                Onplan_idChanging(value);
                ReportPropertyChanging("plan_id");
                _plan_id = StructuralObject.SetValidValue(value, false, "plan_id");
                ReportPropertyChanged("plan_id");
                Onplan_idChanged();
            }
        }
        private global::System.String _plan_id;
        partial void Onplan_idChanging(global::System.String value);
        partial void Onplan_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String state
        {
            get
            {
                return _state;
            }
            set
            {
                OnstateChanging(value);
                ReportPropertyChanging("state");
                _state = StructuralObject.SetValidValue(value, false, "state");
                ReportPropertyChanged("state");
                OnstateChanged();
            }
        }
        private global::System.String _state;
        partial void OnstateChanging(global::System.String value);
        partial void OnstateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="HMSModel", Name="SpViewPatient_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SpViewPatient_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpViewPatient_Result object.
        /// </summary>
        /// <param name="patient_id">Initial value of the patient_id property.</param>
        /// <param name="first_name">Initial value of the first_name property.</param>
        /// <param name="last_name">Initial value of the last_name property.</param>
        /// <param name="date_of_diagnosis">Initial value of the date_of_diagnosis property.</param>
        /// <param name="physician_id">Initial value of the physician_id property.</param>
        /// <param name="symptoms">Initial value of the symptoms property.</param>
        /// <param name="diagnosis">Initial value of the diagnosis property.</param>
        /// <param name="bill_amount">Initial value of the bill_amount property.</param>
        public static SpViewPatient_Result CreateSpViewPatient_Result(global::System.Int64 patient_id, global::System.String first_name, global::System.String last_name, global::System.DateTime date_of_diagnosis, global::System.Int64 physician_id, global::System.String symptoms, global::System.String diagnosis, global::System.Decimal bill_amount)
        {
            SpViewPatient_Result spViewPatient_Result = new SpViewPatient_Result();
            spViewPatient_Result.patient_id = patient_id;
            spViewPatient_Result.first_name = first_name;
            spViewPatient_Result.last_name = last_name;
            spViewPatient_Result.date_of_diagnosis = date_of_diagnosis;
            spViewPatient_Result.physician_id = physician_id;
            spViewPatient_Result.symptoms = symptoms;
            spViewPatient_Result.diagnosis = diagnosis;
            spViewPatient_Result.bill_amount = bill_amount;
            return spViewPatient_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 patient_id
        {
            get
            {
                return _patient_id;
            }
            set
            {
                Onpatient_idChanging(value);
                ReportPropertyChanging("patient_id");
                _patient_id = StructuralObject.SetValidValue(value, "patient_id");
                ReportPropertyChanged("patient_id");
                Onpatient_idChanged();
            }
        }
        private global::System.Int64 _patient_id;
        partial void Onpatient_idChanging(global::System.Int64 value);
        partial void Onpatient_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_of_diagnosis
        {
            get
            {
                return _date_of_diagnosis;
            }
            set
            {
                Ondate_of_diagnosisChanging(value);
                ReportPropertyChanging("date_of_diagnosis");
                _date_of_diagnosis = StructuralObject.SetValidValue(value, "date_of_diagnosis");
                ReportPropertyChanged("date_of_diagnosis");
                Ondate_of_diagnosisChanged();
            }
        }
        private global::System.DateTime _date_of_diagnosis;
        partial void Ondate_of_diagnosisChanging(global::System.DateTime value);
        partial void Ondate_of_diagnosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 physician_id
        {
            get
            {
                return _physician_id;
            }
            set
            {
                Onphysician_idChanging(value);
                ReportPropertyChanging("physician_id");
                _physician_id = StructuralObject.SetValidValue(value, "physician_id");
                ReportPropertyChanged("physician_id");
                Onphysician_idChanged();
            }
        }
        private global::System.Int64 _physician_id;
        partial void Onphysician_idChanging(global::System.Int64 value);
        partial void Onphysician_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String symptoms
        {
            get
            {
                return _symptoms;
            }
            set
            {
                OnsymptomsChanging(value);
                ReportPropertyChanging("symptoms");
                _symptoms = StructuralObject.SetValidValue(value, false, "symptoms");
                ReportPropertyChanged("symptoms");
                OnsymptomsChanged();
            }
        }
        private global::System.String _symptoms;
        partial void OnsymptomsChanging(global::System.String value);
        partial void OnsymptomsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String diagnosis
        {
            get
            {
                return _diagnosis;
            }
            set
            {
                OndiagnosisChanging(value);
                ReportPropertyChanging("diagnosis");
                _diagnosis = StructuralObject.SetValidValue(value, false, "diagnosis");
                ReportPropertyChanged("diagnosis");
                OndiagnosisChanged();
            }
        }
        private global::System.String _diagnosis;
        partial void OndiagnosisChanging(global::System.String value);
        partial void OndiagnosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_of_followup
        {
            get
            {
                return _date_of_followup;
            }
            set
            {
                Ondate_of_followupChanging(value);
                ReportPropertyChanging("date_of_followup");
                _date_of_followup = StructuralObject.SetValidValue(value, "date_of_followup");
                ReportPropertyChanged("date_of_followup");
                Ondate_of_followupChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_of_followup;
        partial void Ondate_of_followupChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_of_followupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal bill_amount
        {
            get
            {
                return _bill_amount;
            }
            set
            {
                Onbill_amountChanging(value);
                ReportPropertyChanging("bill_amount");
                _bill_amount = StructuralObject.SetValidValue(value, "bill_amount");
                ReportPropertyChanged("bill_amount");
                Onbill_amountChanged();
            }
        }
        private global::System.Decimal _bill_amount;
        partial void Onbill_amountChanging(global::System.Decimal value);
        partial void Onbill_amountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="HMSModel", Name="SpViewPatientonFNameandLName_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class SpViewPatientonFNameandLName_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpViewPatientonFNameandLName_Result object.
        /// </summary>
        /// <param name="patient_id">Initial value of the patient_id property.</param>
        /// <param name="first_name">Initial value of the first_name property.</param>
        /// <param name="last_name">Initial value of the last_name property.</param>
        /// <param name="date_of_diagnosis">Initial value of the date_of_diagnosis property.</param>
        /// <param name="physician_id">Initial value of the physician_id property.</param>
        /// <param name="symptoms">Initial value of the symptoms property.</param>
        /// <param name="diagnosis">Initial value of the diagnosis property.</param>
        /// <param name="bill_amount">Initial value of the bill_amount property.</param>
        public static SpViewPatientonFNameandLName_Result CreateSpViewPatientonFNameandLName_Result(global::System.Int64 patient_id, global::System.String first_name, global::System.String last_name, global::System.DateTime date_of_diagnosis, global::System.Int64 physician_id, global::System.String symptoms, global::System.String diagnosis, global::System.Decimal bill_amount)
        {
            SpViewPatientonFNameandLName_Result spViewPatientonFNameandLName_Result = new SpViewPatientonFNameandLName_Result();
            spViewPatientonFNameandLName_Result.patient_id = patient_id;
            spViewPatientonFNameandLName_Result.first_name = first_name;
            spViewPatientonFNameandLName_Result.last_name = last_name;
            spViewPatientonFNameandLName_Result.date_of_diagnosis = date_of_diagnosis;
            spViewPatientonFNameandLName_Result.physician_id = physician_id;
            spViewPatientonFNameandLName_Result.symptoms = symptoms;
            spViewPatientonFNameandLName_Result.diagnosis = diagnosis;
            spViewPatientonFNameandLName_Result.bill_amount = bill_amount;
            return spViewPatientonFNameandLName_Result;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 patient_id
        {
            get
            {
                return _patient_id;
            }
            set
            {
                Onpatient_idChanging(value);
                ReportPropertyChanging("patient_id");
                _patient_id = StructuralObject.SetValidValue(value, "patient_id");
                ReportPropertyChanged("patient_id");
                Onpatient_idChanged();
            }
        }
        private global::System.Int64 _patient_id;
        partial void Onpatient_idChanging(global::System.Int64 value);
        partial void Onpatient_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_of_diagnosis
        {
            get
            {
                return _date_of_diagnosis;
            }
            set
            {
                Ondate_of_diagnosisChanging(value);
                ReportPropertyChanging("date_of_diagnosis");
                _date_of_diagnosis = StructuralObject.SetValidValue(value, "date_of_diagnosis");
                ReportPropertyChanged("date_of_diagnosis");
                Ondate_of_diagnosisChanged();
            }
        }
        private global::System.DateTime _date_of_diagnosis;
        partial void Ondate_of_diagnosisChanging(global::System.DateTime value);
        partial void Ondate_of_diagnosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 physician_id
        {
            get
            {
                return _physician_id;
            }
            set
            {
                Onphysician_idChanging(value);
                ReportPropertyChanging("physician_id");
                _physician_id = StructuralObject.SetValidValue(value, "physician_id");
                ReportPropertyChanged("physician_id");
                Onphysician_idChanged();
            }
        }
        private global::System.Int64 _physician_id;
        partial void Onphysician_idChanging(global::System.Int64 value);
        partial void Onphysician_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String symptoms
        {
            get
            {
                return _symptoms;
            }
            set
            {
                OnsymptomsChanging(value);
                ReportPropertyChanging("symptoms");
                _symptoms = StructuralObject.SetValidValue(value, false, "symptoms");
                ReportPropertyChanged("symptoms");
                OnsymptomsChanged();
            }
        }
        private global::System.String _symptoms;
        partial void OnsymptomsChanging(global::System.String value);
        partial void OnsymptomsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String diagnosis
        {
            get
            {
                return _diagnosis;
            }
            set
            {
                OndiagnosisChanging(value);
                ReportPropertyChanging("diagnosis");
                _diagnosis = StructuralObject.SetValidValue(value, false, "diagnosis");
                ReportPropertyChanged("diagnosis");
                OndiagnosisChanged();
            }
        }
        private global::System.String _diagnosis;
        partial void OndiagnosisChanging(global::System.String value);
        partial void OndiagnosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_of_followup
        {
            get
            {
                return _date_of_followup;
            }
            set
            {
                Ondate_of_followupChanging(value);
                ReportPropertyChanging("date_of_followup");
                _date_of_followup = StructuralObject.SetValidValue(value, "date_of_followup");
                ReportPropertyChanged("date_of_followup");
                Ondate_of_followupChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_of_followup;
        partial void Ondate_of_followupChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_of_followupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal bill_amount
        {
            get
            {
                return _bill_amount;
            }
            set
            {
                Onbill_amountChanging(value);
                ReportPropertyChanging("bill_amount");
                _bill_amount = StructuralObject.SetValidValue(value, "bill_amount");
                ReportPropertyChanged("bill_amount");
                Onbill_amountChanged();
            }
        }
        private global::System.Decimal _bill_amount;
        partial void Onbill_amountChanging(global::System.Decimal value);
        partial void Onbill_amountChanged();

        #endregion

    }

    #endregion

}
